name: release artifacts

on: [push]

jobs:
  build_release:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2
      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: get version
        run: echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
      - name: install app dependencies
        run: npm install
      - name: build linux artifact
        if: matrix.platform == 'ubuntu-latest'
        run: make build-linux
      - name: build macos artifact
        if: matrix.platform == 'macos-latest'
        run: make build-macos
      - name: build windows artifact
        if: matrix.platform == 'windows-latest'
        run: make build-windows
      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: true
          prerelease: false
          release_name: ${{ env.PACKAGE_VERSION }}
          tag_name: ${{ env.PACKAGE_VERSION }}
          # body_path: CHANGELOG.md
          body: Testing release
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: upload linux artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./drosse.linux.tar.gz
          asset_name: drosse.linux.tar.gz
          asset_content_type: application/gzip
      - name: upload macos artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./drosse.macos.tar.gz
          asset_name: drosse.macos.tar.gz
          asset_content_type: application/gzip
      - name: upload windows artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./drosse.windows.zip
          asset_name: drosse.windows.zip
          asset_content_type: application/gzip